<?xml version="1.0" encoding="UTF-8"?>
<!--  
	xmlns:security => xmlns 로 변경
	xmlns => xmlns:beans 로 변경
	위와 같이 하면 <security:속성과 같은 형태로 사용된 태그에서 
	접두어를 제거할 수 있어 코드가 간결해진다. 
-->
<beans:beans xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.2.xsd">
 	 
 	<!--  
 		시큐리티 3단계 : 로그인을 JDBC연동으로 커스터 마이징 하기
 		
 		<http> 부분은 2단계와 동일함.
 	-->
	<http>
		<intercept-url pattern="/security2/login.do" 
			access="permitAll" />
		<intercept-url pattern="/security2/admin/**" 
			access="hasRole('ADMIN')"/>
		<intercept-url pattern="/security2/**" 
			access="hasAnyRole('USER, ADMIN')"/>
		<intercept-url pattern="/**" access="permitAll" />
			
		<form-login 
			login-page="/security2/login.do"
			default-target-url="/security2/index.do"
			authentication-failure-url="/security2/login.do?error"
			login-processing-url="/loginAction" 
			username-parameter="id"  
			password-parameter="pass" />			
		<logout 
			logout-url="/security2/logout"
			logout-success-url="/security2/index.do"/>
		<access-denied-handler 
			error-page="/security2/accessDenied.do" />
	</http>
	<!-- 각 권한을 획득하기 위한 설정부분 -->
	<!--  
	jdbc-user-service 
		data-source-ref 
			: 데이터베이스 연결을 나타내는 dataSource로 해당 빈은 
			반드시 root-context.xml에서	생성해야 한다. 
		role-prefix 
			: "ROLE_" 와 같은 권한명 앞에 붙는 접두어를 지정한다. 
			만약 해당 항목을 "ROLE_"로 지정하면 테이블에서는
			"USER"와 같이 입력해야 한다. 
		users-by-username-query 
			: 아이디를 이용하여 사용자 정보를 가져오는 쿼리문을 
			작성한다. 
		authorities-by-username-query
			: 아이디를 이용하여 권한정보를 가져오는 쿼리문을
			작성한다. 
	-->
	<authentication-manager>
		<authentication-provider>
			<jdbc-user-service 
				data-source-ref="dataSource"
				role-prefix=""
				users-by-username-query="SELECT
					user_id, user_pw, enabled
					FROM security_admin WHERE user_id=?"
				authorities-by-username-query="SELECT
					user_id, authority
					FROM security_admin WHERE user_id=?"/>			
		</authentication-provider>
	</authentication-manager>

</beans:beans>








